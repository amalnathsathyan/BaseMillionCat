{"abi":[{"type":"function","name":"LP_TOKEN","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"view"},{"type":"function","name":"PONZIO","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPonzioTheCat"}],"stateMutability":"view"},{"type":"function","name":"swap","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"path","type":"address[]","internalType":"address[]"},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"updateSupplyAndAddLiquidity","inputs":[{"name":"amountWETHDesired","type":"uint256","internalType":"uint256"},{"name":"amountPonzioDesired","type":"uint256","internalType":"uint256"},{"name":"amountETHMin","type":"uint256","internalType":"uint256"},{"name":"amountPonzioMin","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"}],"outputs":[{"name":"amountPonzio_","type":"uint256","internalType":"uint256"},{"name":"amountETH_","type":"uint256","internalType":"uint256"},{"name":"liquidity_","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"error","name":"Router_insufficientAmount","inputs":[]},{"type":"error","name":"Router_invalidPath","inputs":[{"name":"path","type":"address[]","internalType":"address[]"}]},{"type":"error","name":"Router_liquidityError","inputs":[]},{"type":"error","name":"Router_refundFailed","inputs":[]},{"type":"error","name":"Router_valueNeeded","inputs":[]},{"type":"error","name":"Router_valueNotNeeded","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"LP_TOKEN()":"bfd9041b","PONZIO()":"d8cbf704","swap(uint256,uint256,address[],address,uint256)":"90f11e84","updateSupplyAndAddLiquidity(uint256,uint256,uint256,uint256,address)":"beff5bf5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Router_insufficientAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"Router_invalidPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Router_liquidityError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Router_refundFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Router_valueNeeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Router_valueNotNeeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LP_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PONZIO\",\"outputs\":[{\"internalType\":\"contract IPonzioTheCat\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountWETHDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountPonzioDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountPonzioMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"updateSupplyAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountPonzio_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity_\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"Router_invalidPath(address[])\":[{\"params\":{\"path\":\"the invalid array of addresses\"}}]},\"kind\":\"dev\",\"methods\":{\"LP_TOKEN()\":{\"returns\":{\"_0\":\"IERC20 address of the staking token\"}},\"PONZIO()\":{\"returns\":{\"_0\":\"IPonzioTheCat address of the Ponzio\"}},\"swap(uint256,uint256,address[],address,uint256)\":{\"details\":\": This function supports both ETH and ERC20 tokens as input and output. The address 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE is used as a placeholder for ETH. If the input token is ETH, it is replaced with the actual WETH address and `swapExactETHForTokensSupportingFeeOnTransferTokens` is called. If the output token is ETH, it is replaced with the actual WETH address and `swapExactTokensForETHSupportingFeeOnTransferTokens` is called. Otherwise, `swapExactTokensForTokensSupportingFeeOnTransferTokens` is called. If there is any ETH balance left in the contract, it is sent back to the caller. Requirements: - The `path` must have at least two addresses. - The sender must have approved this contract to spend the input tokens.\",\"params\":{\"amountIn\":\"The amount of input tokens to be sent.\",\"amountOutMin\":\"The minimum amount of output tokens that must be received for the transaction not to revert.\",\"deadline\":\"The time after which the swap is invalid.\",\"path\":\"An array of token addresses. The path[0] address is the input token and the last address is the output token.\",\"to\":\"The address to send the output tokens to.\"}},\"updateSupplyAndAddLiquidity(uint256,uint256,uint256,uint256,address)\":{\"details\":\"amountWETHDesired = 0 when adding liquidity with ETH\",\"params\":{\"amountETHMin\":\"The minimum amount of ETH/WETH the user wants to add as liquidity.\",\"amountPonzioDesired\":\"The amount of Ponzio token the user wants to add as liquidity.\",\"amountPonzioMin\":\"The minimum amount of Ponzio token the user wants to add as liquidity.\",\"amountWETHDesired\":\"The amount of WETH the user wants to add as liquidity.\",\"to\":\"The address to which the liquidity tokens will be minted.\"},\"returns\":{\"amountETH_\":\"The actual amount of ETH (or equivalent) added as liquidity.\",\"amountPonzio_\":\"The actual amount of Ponzio token added as liquidity.\",\"liquidity_\":\"The amount of liquidity tokens minted.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"Router_insufficientAmount()\":[{\"notice\":\"Revert when the amount isn't enough in addLiquidity.\"}],\"Router_invalidPath(address[])\":[{\"notice\":\"Revert when the user passes an invalid path (length < 2).\"}],\"Router_liquidityError()\":[{\"notice\":\"Revert when the calculation of liquidity to add fails.\"}],\"Router_refundFailed()\":[{\"notice\":\"Revert when the refund in addLiquidity fails.\"}],\"Router_valueNeeded()\":[{\"notice\":\"Revert when no value was added to the transaction but it was needed\"}],\"Router_valueNotNeeded()\":[{\"notice\":\"Revert when the user sent a value but it wasn't needed\"}]},\"kind\":\"user\",\"methods\":{\"LP_TOKEN()\":{\"notice\":\"Returns the address of the staking token.\"},\"PONZIO()\":{\"notice\":\"Returns the address of the Ponzio.\"},\"swap(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps a certain `amountIn` of a token for another token, ensuring a minimum output `amountOutMin`.\"},\"updateSupplyAndAddLiquidity(uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Update the supply of Ponzio and add liquidity to the pair.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IRouter.sol\":\"IRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"src/interfaces/IERC20Rebasable.sol\":{\"keccak256\":\"0x480ec2c2c5874dccc90fb36241f58bdbcb4eb32230a1d322233a9d04387f4016\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c8ac89047b4e287273b612671953adaaf6f26c1b89c4d127bc48cf73981c91b4\",\"dweb:/ipfs/QmXBcbRWkrSAfbYcyEDFQbb53AGTdST2mvcxHo4N8jDbud\"]},\"src/interfaces/IPonzioTheCat.sol\":{\"keccak256\":\"0xfd72e5a753f32473357c853d0711ecbfb9189482ebc768d6d5e4ffc368da6ed4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0414f9289e7622cf87ca47639cef00ebe65fcbfbc5758f850729376030edce93\",\"dweb:/ipfs/QmabAo1NsX2Y5QRHBrUH4jQUbAZb2sjoFmuUbZ2QRAv3kk\"]},\"src/interfaces/IRouter.sol\":{\"keccak256\":\"0xf40035f6ec2f58f5fcc88348a691c4f81c4fa34391997d7632c2ee4d4a69bb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbe24e4ebca93876dbb4081639e82e36951133f648d095921195137df8b4edcf\",\"dweb:/ipfs/QmSejpChJj8nCc5DYZHQcv6uLqUXvY8bYFxrhmwqW5H7kY\"]},\"src/interfaces/UniswapV2/IUniswapV2Pair.sol\":{\"keccak256\":\"0xbeae878c7d7b88f85193db1377049cb3ceb4fca5a28579a127df1fac486851d0\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://858b19bc7c9d3e930844eb98dd0b62c5f9c64d626160adabfe77399389a11219\",\"dweb:/ipfs/QmSeZPzahwzb2ef8yRio62BQf8JoEhUnrWNTAFBoqQQFtb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"Router_insufficientAmount"},{"inputs":[{"internalType":"address[]","name":"path","type":"address[]"}],"type":"error","name":"Router_invalidPath"},{"inputs":[],"type":"error","name":"Router_liquidityError"},{"inputs":[],"type":"error","name":"Router_refundFailed"},{"inputs":[],"type":"error","name":"Router_valueNeeded"},{"inputs":[],"type":"error","name":"Router_valueNotNeeded"},{"inputs":[],"stateMutability":"view","type":"function","name":"LP_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PONZIO","outputs":[{"internalType":"contract IPonzioTheCat","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"payable","type":"function","name":"swap"},{"inputs":[{"internalType":"uint256","name":"amountWETHDesired","type":"uint256"},{"internalType":"uint256","name":"amountPonzioDesired","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"uint256","name":"amountPonzioMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"payable","type":"function","name":"updateSupplyAndAddLiquidity","outputs":[{"internalType":"uint256","name":"amountPonzio_","type":"uint256"},{"internalType":"uint256","name":"amountETH_","type":"uint256"},{"internalType":"uint256","name":"liquidity_","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"LP_TOKEN()":{"returns":{"_0":"IERC20 address of the staking token"}},"PONZIO()":{"returns":{"_0":"IPonzioTheCat address of the Ponzio"}},"swap(uint256,uint256,address[],address,uint256)":{"details":": This function supports both ETH and ERC20 tokens as input and output. The address 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE is used as a placeholder for ETH. If the input token is ETH, it is replaced with the actual WETH address and `swapExactETHForTokensSupportingFeeOnTransferTokens` is called. If the output token is ETH, it is replaced with the actual WETH address and `swapExactTokensForETHSupportingFeeOnTransferTokens` is called. Otherwise, `swapExactTokensForTokensSupportingFeeOnTransferTokens` is called. If there is any ETH balance left in the contract, it is sent back to the caller. Requirements: - The `path` must have at least two addresses. - The sender must have approved this contract to spend the input tokens.","params":{"amountIn":"The amount of input tokens to be sent.","amountOutMin":"The minimum amount of output tokens that must be received for the transaction not to revert.","deadline":"The time after which the swap is invalid.","path":"An array of token addresses. The path[0] address is the input token and the last address is the output token.","to":"The address to send the output tokens to."}},"updateSupplyAndAddLiquidity(uint256,uint256,uint256,uint256,address)":{"details":"amountWETHDesired = 0 when adding liquidity with ETH","params":{"amountETHMin":"The minimum amount of ETH/WETH the user wants to add as liquidity.","amountPonzioDesired":"The amount of Ponzio token the user wants to add as liquidity.","amountPonzioMin":"The minimum amount of Ponzio token the user wants to add as liquidity.","amountWETHDesired":"The amount of WETH the user wants to add as liquidity.","to":"The address to which the liquidity tokens will be minted."},"returns":{"amountETH_":"The actual amount of ETH (or equivalent) added as liquidity.","amountPonzio_":"The actual amount of Ponzio token added as liquidity.","liquidity_":"The amount of liquidity tokens minted."}}},"version":1},"userdoc":{"kind":"user","methods":{"LP_TOKEN()":{"notice":"Returns the address of the staking token."},"PONZIO()":{"notice":"Returns the address of the Ponzio."},"swap(uint256,uint256,address[],address,uint256)":{"notice":"Swaps a certain `amountIn` of a token for another token, ensuring a minimum output `amountOutMin`."},"updateSupplyAndAddLiquidity(uint256,uint256,uint256,uint256,address)":{"notice":"Update the supply of Ponzio and add liquidity to the pair."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IRouter.sol":"IRouter"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70","urls":["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c","dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff","urls":["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d","dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"],"license":"MIT"},"src/interfaces/IERC20Rebasable.sol":{"keccak256":"0x480ec2c2c5874dccc90fb36241f58bdbcb4eb32230a1d322233a9d04387f4016","urls":["bzz-raw://c8ac89047b4e287273b612671953adaaf6f26c1b89c4d127bc48cf73981c91b4","dweb:/ipfs/QmXBcbRWkrSAfbYcyEDFQbb53AGTdST2mvcxHo4N8jDbud"],"license":"BUSL-1.1"},"src/interfaces/IPonzioTheCat.sol":{"keccak256":"0xfd72e5a753f32473357c853d0711ecbfb9189482ebc768d6d5e4ffc368da6ed4","urls":["bzz-raw://0414f9289e7622cf87ca47639cef00ebe65fcbfbc5758f850729376030edce93","dweb:/ipfs/QmabAo1NsX2Y5QRHBrUH4jQUbAZb2sjoFmuUbZ2QRAv3kk"],"license":"BUSL-1.1"},"src/interfaces/IRouter.sol":{"keccak256":"0xf40035f6ec2f58f5fcc88348a691c4f81c4fa34391997d7632c2ee4d4a69bb96","urls":["bzz-raw://cbe24e4ebca93876dbb4081639e82e36951133f648d095921195137df8b4edcf","dweb:/ipfs/QmSejpChJj8nCc5DYZHQcv6uLqUXvY8bYFxrhmwqW5H7kY"],"license":"MIT"},"src/interfaces/UniswapV2/IUniswapV2Pair.sol":{"keccak256":"0xbeae878c7d7b88f85193db1377049cb3ceb4fca5a28579a127df1fac486851d0","urls":["bzz-raw://858b19bc7c9d3e930844eb98dd0b62c5f9c64d626160adabfe77399389a11219","dweb:/ipfs/QmSeZPzahwzb2ef8yRio62BQf8JoEhUnrWNTAFBoqQQFtb"],"license":"Unlicense"}},"version":1},"id":49}