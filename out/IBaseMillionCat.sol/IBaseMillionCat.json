{"abi":[{"type":"function","name":"DEBASE_EVERY","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"DEPLOYED_TIME","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"FEES_BASE","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"FEES_STAKING","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"HALVING_EVERY","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"INITIAL_SUPPLY","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"MINIMUM_TOTAL_SUPPLY","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"NB_DEBASE_PER_HALVING","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"SHARES_PRECISION_FACTOR","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"computeNewState","inputs":[],"outputs":[{"name":"totalShares_","type":"uint256","internalType":"uint256"},{"name":"totalSupply_","type":"uint256","internalType":"uint256"},{"name":"fees_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"computeSupply","inputs":[],"outputs":[{"name":"totalSupply_","type":"uint256","internalType":"uint256"},{"name":"fees_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"feesCollector","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"feesCollector_","type":"address","internalType":"address"},{"name":"uniV2PoolAddr_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"maxSharesReached","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"nonces","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"permit","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"realBalanceOf","inputs":[{"name":"account_","type":"address","internalType":"address"}],"outputs":[{"name":"balance_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setBlacklistForUpdateSupply","inputs":[{"name":"addrToBlacklist","type":"address","internalType":"address"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFeesCollector","inputs":[{"name":"feesCollector_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setUniswapV2Pair","inputs":[{"name":"uniV2PoolAddr_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sharesOf","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"sharesToToken","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"newTotalShares","type":"uint256","internalType":"uint256"},{"name":"newTotalSupply","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"tokenAmount_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"sharesToToken","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"tokenAmount_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"tokenToShares","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"tokenToShares","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"newTotalShares","type":"uint256","internalType":"uint256"},{"name":"newTotalSupply","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalShares","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferShares","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferSharesFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"uniswapV2Pair","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IUniswapV2Pair"}],"stateMutability":"view"},{"type":"function","name":"updateTotalSupply","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BlacklistForUpdateSupplySet","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"bool","indexed":true,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"FeesCollectorSet","inputs":[{"name":"feesCollector","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"MaxSharesReached","inputs":[{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TotalSupplyUpdated","inputs":[{"name":"oldTotalSupply","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newTotalSupply","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"oldTotalShare","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newTotalShare","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"fees","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UniV2PoolPairSet","inputs":[{"name":"uniV2PoolPair","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"PONZIO_alreadyInitialized","inputs":[]},{"type":"error","name":"PONZIO_feeCollectorZeroAddress","inputs":[]},{"type":"error","name":"PONZIO_notInitialized","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DEBASE_EVERY()":"280cc3d2","DEPLOYED_TIME()":"65017796","DOMAIN_SEPARATOR()":"3644e515","FEES_BASE()":"ece531b0","FEES_STAKING()":"4b457d98","HALVING_EVERY()":"1db6e850","INITIAL_SUPPLY()":"2ff2e9dc","MINIMUM_TOTAL_SUPPLY()":"70fc982d","NB_DEBASE_PER_HALVING()":"b23b36ad","SHARES_PRECISION_FACTOR()":"fda9c947","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","computeNewState()":"baa83f69","computeSupply()":"7a60e069","feesCollector()":"9cf160f6","initialize(address,address)":"485cc955","maxSharesReached()":"db6905ab","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","realBalanceOf(address)":"99a03c70","setBlacklistForUpdateSupply(address,bool)":"d4245ebb","setFeesCollector(address)":"373071f2","setUniswapV2Pair(address)":"a29a6089","sharesOf(address)":"f5eb42dc","sharesToToken(uint256)":"6cf81ec6","sharesToToken(uint256,uint256,uint256)":"5e703fec","tokenToShares(uint256)":"361bb0c1","tokenToShares(uint256,uint256,uint256)":"c53dc757","totalShares()":"3a98ef39","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferShares(address,uint256)":"8fcb4e5b","transferSharesFrom(address,address,uint256)":"6d780459","uniswapV2Pair()":"49bd5a5e","updateTotalSupply()":"d0dc5c65"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PONZIO_alreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PONZIO_feeCollectorZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PONZIO_notInitialized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"BlacklistForUpdateSupplySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"}],\"name\":\"FeesCollectorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MaxSharesReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTotalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTotalShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"TotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"uniV2PoolPair\",\"type\":\"address\"}],\"name\":\"UniV2PoolPairSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEBASE_EVERY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPLOYED_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEES_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEES_STAKING\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HALVING_EVERY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NB_DEBASE_PER_HALVING\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHARES_PRECISION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeNewState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalShares_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fees_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fees_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feesCollector_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniV2PoolAddr_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSharesReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"}],\"name\":\"realBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addrToBlacklist\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setBlacklistForUpdateSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feesCollector_\",\"type\":\"address\"}],\"name\":\"setFeesCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniV2PoolAddr_\",\"type\":\"address\"}],\"name\":\"setUniswapV2Pair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newTotalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newTotalSupply\",\"type\":\"uint256\"}],\"name\":\"sharesToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"sharesToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokenToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newTotalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newTotalSupply\",\"type\":\"uint256\"}],\"name\":\"tokenToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"transferShares\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"transferSharesFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"BlacklistForUpdateSupplySet(address,bool)\":{\"params\":{\"account\":\"The account that is blacklisted.\",\"value\":\"The new value of the blacklist.\"}},\"FeesCollectorSet(address)\":{\"params\":{\"feesCollector\":\"The new feesCollector. It's ok to set the feesCollector to the zero address, in which case no fees will be collected.\"}},\"MaxSharesReached(uint256)\":{\"params\":{\"timestamp\":\"The timestamp at which the maximum is reached.\"}},\"TotalSupplyUpdated(uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"fees\":\"The fees collected.\",\"newTotalShare\":\"The new total share.\",\"newTotalSupply\":\"The new total supply.\",\"oldTotalShare\":\"The old total share.\",\"oldTotalSupply\":\"The old total supply.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"UniV2PoolPairSet(address)\":{\"params\":{\"uniV2PoolPair\":\"The new uniV2PoolPair.\"}}},\"kind\":\"dev\",\"methods\":{\"DEBASE_EVERY()\":{\"returns\":{\"_0\":\"The time between each debasing.\"}},\"DEPLOYED_TIME()\":{\"returns\":{\"_0\":\"The time at which the contract was deployed.\"}},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"FEES_BASE()\":{\"returns\":{\"_0\":\"The fee base\"}},\"FEES_STAKING()\":{\"returns\":{\"_0\":\"The fees collected on each debasing.\"}},\"HALVING_EVERY()\":{\"returns\":{\"_0\":\"The time between each halving.\"}},\"INITIAL_SUPPLY()\":{\"returns\":{\"_0\":\"The initial supply of the token.\"}},\"MINIMUM_TOTAL_SUPPLY()\":{\"returns\":{\"_0\":\"The minimum total supply.\"}},\"NB_DEBASE_PER_HALVING()\":{\"returns\":{\"_0\":\"The number of debasing per halving.\"}},\"SHARES_PRECISION_FACTOR()\":{\"returns\":{\"_0\":\"The precision factor for shares.\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"computeNewState()\":{\"returns\":{\"fees_\":\"The fees to collect.\",\"totalShares_\":\"The new total shares.\",\"totalSupply_\":\"The new total supply.\"}},\"computeSupply()\":{\"returns\":{\"fees_\":\"The fees to collect.\",\"totalSupply_\":\"The new total supply.\"}},\"feesCollector()\":{\"returns\":{\"_0\":\"The address that collects the fees\"}},\"initialize(address,address)\":{\"params\":{\"feesCollector_\":\"The address that will collect the fees.\",\"uniV2PoolAddr_\":\"The address of the uniswap V2 pool.\"}},\"maxSharesReached()\":{\"details\":\"The max shares are reached when the total of shares is about to overflow. When reached, fees are not collected anymore.\",\"returns\":{\"_0\":\"True if the max shares are reached, false otherwise.\"}},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"realBalanceOf(address)\":{\"details\":\"This function will only return the right balance if the feesCollector is set.\",\"params\":{\"account_\":\"The account to check the balance of.\"},\"returns\":{\"balance_\":\"The real-time balance of the account.\"}},\"setBlacklistForUpdateSupply(address,bool)\":{\"params\":{\"addrToBlacklist\":\"The address to blacklist.\",\"value\":\"The new value of the blacklist.\"}},\"setFeesCollector(address)\":{\"params\":{\"feesCollector_\":\"The new fees collector.\"}},\"setUniswapV2Pair(address)\":{\"details\":\"Set the Uniswap V2 pair address to zero address to disable syncing.\",\"params\":{\"uniV2PoolAddr_\":\"The new Uniswap V2 pair address.\"}},\"sharesOf(address)\":{\"params\":{\"user\":\"The address of the user to get the share of.\"},\"returns\":{\"_0\":\"The share of the user.\"}},\"sharesToToken(uint256)\":{\"params\":{\"shares\":\"The amount of shares to convert to tokens.\"},\"returns\":{\"tokenAmount_\":\"The amount of tokens corresponding to the shares.\"}},\"sharesToToken(uint256,uint256,uint256)\":{\"params\":{\"newTotalShares\":\"The new total shares.\",\"newTotalSupply\":\"The new total supply.\",\"shares\":\"The amount of shares to convert to tokens.\"},\"returns\":{\"tokenAmount_\":\"The amount of tokens corresponding to the shares.\"}},\"tokenToShares(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to convert to shares.\"},\"returns\":{\"shares_\":\"The number of shares corresponding to the tokens.\"}},\"tokenToShares(uint256,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to convert to shares.\",\"newTotalShares\":\"The new total shares.\",\"newTotalSupply\":\"The new total supply.\"},\"returns\":{\"shares_\":\"The number of shares corresponding to the tokens.\"}},\"totalShares()\":{\"returns\":{\"_0\":\"The total shares.\"}},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferShares(address,uint256)\":{\"params\":{\"shares\":\"The amount of shares to be transferred.\",\"to\":\"The address to transfer the tokens to.\"},\"returns\":{\"_0\":\"True if the transfer was successful, revert otherwise.\"}},\"transferSharesFrom(address,address,uint256)\":{\"details\":\"This function tries to update the total supply by calling `updateTotalSupply()`\",\"params\":{\"from\":\"The address to transfer the shares from.\",\"shares\":\"The amount of shares to be transferred.\",\"to\":\"The address to transfer the shares to.\"},\"returns\":{\"_0\":\"True if the transfer was successful, revert otherwise.\"}},\"uniswapV2Pair()\":{\"returns\":{\"_0\":\"The Uniswap V2 pair.\"}},\"updateTotalSupply()\":{\"details\":\"This function is already called at each approval and transfer. It needs to be implemented by a child contract\"}},\"version\":1},\"userdoc\":{\"errors\":{\"PONZIO_alreadyInitialized()\":[{\"notice\":\"Error code is thrown when the contract is being initialized a 2nd time.\"}],\"PONZIO_feeCollectorZeroAddress()\":[{\"notice\":\"Error code thrown in setFeesCollector when the new feesCollector is the zero address.\"}],\"PONZIO_notInitialized()\":[{\"notice\":\"Error code thrown in setFeesCollector when the contract has not been initialized yet.\"}]},\"events\":{\"BlacklistForUpdateSupplySet(address,bool)\":{\"notice\":\"Emitted when an account is blacklisted for UpdateTotalSupply.\"},\"FeesCollectorSet(address)\":{\"notice\":\"Emitted FeesCollector changes.\"},\"MaxSharesReached(uint256)\":{\"notice\":\"Emitted when the max shares are reached.\"},\"TotalSupplyUpdated(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when the total supply is updated.\"},\"UniV2PoolPairSet(address)\":{\"notice\":\"Emitted when the Uniswap V2 pair address is set.\"}},\"kind\":\"user\",\"methods\":{\"DEBASE_EVERY()\":{\"notice\":\"Time between each debasing.\"},\"DEPLOYED_TIME()\":{\"notice\":\"The time at which the contract was deployed.\"},\"FEES_BASE()\":{\"notice\":\"The fee base used for FEES_STAKING\"},\"FEES_STAKING()\":{\"notice\":\"Fees collected on each debasing, in FEES_BASE percent.\"},\"HALVING_EVERY()\":{\"notice\":\"Time between each halving.\"},\"INITIAL_SUPPLY()\":{\"notice\":\"Initial supply of the token.\"},\"MINIMUM_TOTAL_SUPPLY()\":{\"notice\":\"Minimum total supply. When the total supply reaches this value, it can't go lower.\"},\"NB_DEBASE_PER_HALVING()\":{\"notice\":\"Number of debasing per halving.\"},\"SHARES_PRECISION_FACTOR()\":{\"notice\":\"returns the precision factor for shares.\"},\"computeNewState()\":{\"notice\":\"Compute the total shares, supply and the fees to collect.\"},\"computeSupply()\":{\"notice\":\"Compute the total supply and the fees to collect.\"},\"feesCollector()\":{\"notice\":\"The address that collects the fees (the staking contract)\"},\"initialize(address,address)\":{\"notice\":\"Initialize the contract by setting the fees collector and staking the first amount of tokens.\"},\"maxSharesReached()\":{\"notice\":\"returns if the max shares are reached.\"},\"realBalanceOf(address)\":{\"notice\":\"Return the real-time balance of an account after an UpdateTotalSupply() call.\"},\"setBlacklistForUpdateSupply(address,bool)\":{\"notice\":\"Blacklist an address for UpdateTotalSupply.\"},\"setFeesCollector(address)\":{\"notice\":\"Changes the fees collector.\"},\"setUniswapV2Pair(address)\":{\"notice\":\"Changes the Uniswap V2 pair address.\"},\"sharesOf(address)\":{\"notice\":\"returns the share of the user.\"},\"sharesToToken(uint256)\":{\"notice\":\"Convert shares to tokens.\"},\"sharesToToken(uint256,uint256,uint256)\":{\"notice\":\"Convert shares to tokens given the new total shares and total supply.\"},\"tokenToShares(uint256)\":{\"notice\":\"Convert tokens to shares.\"},\"tokenToShares(uint256,uint256,uint256)\":{\"notice\":\"Convert tokens to shares given the new total shares and total supply.\"},\"totalShares()\":{\"notice\":\"returns the total shares.\"},\"transferShares(address,uint256)\":{\"notice\":\"Transfer tokens to a specified address by specifying the share amount.\"},\"transferSharesFrom(address,address,uint256)\":{\"notice\":\"Transfer shares from a specified address to another specified address.\"},\"uniswapV2Pair()\":{\"notice\":\"The Uniswap V2 pair to sync when debasing.\"},\"updateTotalSupply()\":{\"notice\":\"update the total supply, compute the debase accordingly and transfer the fees to the feesCollector.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBaseMillionCat.sol\":\"IBaseMillionCat\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"src/interfaces/IBaseMillionCat.sol\":{\"keccak256\":\"0xd919039f7914326fa0e64aeed752edc61e210885e97b504971945cb4006074f5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f60662d835756a0a5235c32265e3aeaa9581b46f522ebf5432e20b44e7d54bea\",\"dweb:/ipfs/QmX44KRiDop1GL1jsBJqzu3FKQSSxhmiG9nmNJWsqtnd54\"]},\"src/interfaces/IERC20Rebasable.sol\":{\"keccak256\":\"0x480ec2c2c5874dccc90fb36241f58bdbcb4eb32230a1d322233a9d04387f4016\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c8ac89047b4e287273b612671953adaaf6f26c1b89c4d127bc48cf73981c91b4\",\"dweb:/ipfs/QmXBcbRWkrSAfbYcyEDFQbb53AGTdST2mvcxHo4N8jDbud\"]},\"src/interfaces/UniswapV2/IUniswapV2Pair.sol\":{\"keccak256\":\"0xbeae878c7d7b88f85193db1377049cb3ceb4fca5a28579a127df1fac486851d0\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://858b19bc7c9d3e930844eb98dd0b62c5f9c64d626160adabfe77399389a11219\",\"dweb:/ipfs/QmSeZPzahwzb2ef8yRio62BQf8JoEhUnrWNTAFBoqQQFtb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"PONZIO_alreadyInitialized"},{"inputs":[],"type":"error","name":"PONZIO_feeCollectorZeroAddress"},{"inputs":[],"type":"error","name":"PONZIO_notInitialized"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"bool","name":"value","type":"bool","indexed":true}],"type":"event","name":"BlacklistForUpdateSupplySet","anonymous":false},{"inputs":[{"internalType":"address","name":"feesCollector","type":"address","indexed":true}],"type":"event","name":"FeesCollectorSet","anonymous":false},{"inputs":[{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false}],"type":"event","name":"MaxSharesReached","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldTotalSupply","type":"uint256","indexed":false},{"internalType":"uint256","name":"newTotalSupply","type":"uint256","indexed":false},{"internalType":"uint256","name":"oldTotalShare","type":"uint256","indexed":false},{"internalType":"uint256","name":"newTotalShare","type":"uint256","indexed":false},{"internalType":"uint256","name":"fees","type":"uint256","indexed":false}],"type":"event","name":"TotalSupplyUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"uniV2PoolPair","type":"address","indexed":true}],"type":"event","name":"UniV2PoolPairSet","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DEBASE_EVERY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DEPLOYED_TIME","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"FEES_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"FEES_STAKING","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"HALVING_EVERY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"INITIAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MINIMUM_TOTAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"NB_DEBASE_PER_HALVING","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SHARES_PRECISION_FACTOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"computeNewState","outputs":[{"internalType":"uint256","name":"totalShares_","type":"uint256"},{"internalType":"uint256","name":"totalSupply_","type":"uint256"},{"internalType":"uint256","name":"fees_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"computeSupply","outputs":[{"internalType":"uint256","name":"totalSupply_","type":"uint256"},{"internalType":"uint256","name":"fees_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"feesCollector","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"feesCollector_","type":"address"},{"internalType":"address","name":"uniV2PoolAddr_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"maxSharesReached","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"permit"},{"inputs":[{"internalType":"address","name":"account_","type":"address"}],"stateMutability":"view","type":"function","name":"realBalanceOf","outputs":[{"internalType":"uint256","name":"balance_","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"addrToBlacklist","type":"address"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setBlacklistForUpdateSupply"},{"inputs":[{"internalType":"address","name":"feesCollector_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFeesCollector"},{"inputs":[{"internalType":"address","name":"uniV2PoolAddr_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setUniswapV2Pair"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"sharesOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"newTotalShares","type":"uint256"},{"internalType":"uint256","name":"newTotalSupply","type":"uint256"}],"stateMutability":"view","type":"function","name":"sharesToToken","outputs":[{"internalType":"uint256","name":"tokenAmount_","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"sharesToToken","outputs":[{"internalType":"uint256","name":"tokenAmount_","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokenToShares","outputs":[{"internalType":"uint256","name":"shares_","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"newTotalShares","type":"uint256"},{"internalType":"uint256","name":"newTotalSupply","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokenToShares","outputs":[{"internalType":"uint256","name":"shares_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferShares","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferSharesFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"uniswapV2Pair","outputs":[{"internalType":"contract IUniswapV2Pair","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"updateTotalSupply"}],"devdoc":{"kind":"dev","methods":{"DEBASE_EVERY()":{"returns":{"_0":"The time between each debasing."}},"DEPLOYED_TIME()":{"returns":{"_0":"The time at which the contract was deployed."}},"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"FEES_BASE()":{"returns":{"_0":"The fee base"}},"FEES_STAKING()":{"returns":{"_0":"The fees collected on each debasing."}},"HALVING_EVERY()":{"returns":{"_0":"The time between each halving."}},"INITIAL_SUPPLY()":{"returns":{"_0":"The initial supply of the token."}},"MINIMUM_TOTAL_SUPPLY()":{"returns":{"_0":"The minimum total supply."}},"NB_DEBASE_PER_HALVING()":{"returns":{"_0":"The number of debasing per halving."}},"SHARES_PRECISION_FACTOR()":{"returns":{"_0":"The precision factor for shares."}},"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"computeNewState()":{"returns":{"fees_":"The fees to collect.","totalShares_":"The new total shares.","totalSupply_":"The new total supply."}},"computeSupply()":{"returns":{"fees_":"The fees to collect.","totalSupply_":"The new total supply."}},"feesCollector()":{"returns":{"_0":"The address that collects the fees"}},"initialize(address,address)":{"params":{"feesCollector_":"The address that will collect the fees.","uniV2PoolAddr_":"The address of the uniswap V2 pool."}},"maxSharesReached()":{"details":"The max shares are reached when the total of shares is about to overflow. When reached, fees are not collected anymore.","returns":{"_0":"True if the max shares are reached, false otherwise."}},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."},"realBalanceOf(address)":{"details":"This function will only return the right balance if the feesCollector is set.","params":{"account_":"The account to check the balance of."},"returns":{"balance_":"The real-time balance of the account."}},"setBlacklistForUpdateSupply(address,bool)":{"params":{"addrToBlacklist":"The address to blacklist.","value":"The new value of the blacklist."}},"setFeesCollector(address)":{"params":{"feesCollector_":"The new fees collector."}},"setUniswapV2Pair(address)":{"details":"Set the Uniswap V2 pair address to zero address to disable syncing.","params":{"uniV2PoolAddr_":"The new Uniswap V2 pair address."}},"sharesOf(address)":{"params":{"user":"The address of the user to get the share of."},"returns":{"_0":"The share of the user."}},"sharesToToken(uint256)":{"params":{"shares":"The amount of shares to convert to tokens."},"returns":{"tokenAmount_":"The amount of tokens corresponding to the shares."}},"sharesToToken(uint256,uint256,uint256)":{"params":{"newTotalShares":"The new total shares.","newTotalSupply":"The new total supply.","shares":"The amount of shares to convert to tokens."},"returns":{"tokenAmount_":"The amount of tokens corresponding to the shares."}},"tokenToShares(uint256)":{"params":{"amount":"The amount of tokens to convert to shares."},"returns":{"shares_":"The number of shares corresponding to the tokens."}},"tokenToShares(uint256,uint256,uint256)":{"params":{"amount":"The amount of tokens to convert to shares.","newTotalShares":"The new total shares.","newTotalSupply":"The new total supply."},"returns":{"shares_":"The number of shares corresponding to the tokens."}},"totalShares()":{"returns":{"_0":"The total shares."}},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferShares(address,uint256)":{"params":{"shares":"The amount of shares to be transferred.","to":"The address to transfer the tokens to."},"returns":{"_0":"True if the transfer was successful, revert otherwise."}},"transferSharesFrom(address,address,uint256)":{"details":"This function tries to update the total supply by calling `updateTotalSupply()`","params":{"from":"The address to transfer the shares from.","shares":"The amount of shares to be transferred.","to":"The address to transfer the shares to."},"returns":{"_0":"True if the transfer was successful, revert otherwise."}},"uniswapV2Pair()":{"returns":{"_0":"The Uniswap V2 pair."}},"updateTotalSupply()":{"details":"This function is already called at each approval and transfer. It needs to be implemented by a child contract"}},"version":1},"userdoc":{"kind":"user","methods":{"DEBASE_EVERY()":{"notice":"Time between each debasing."},"DEPLOYED_TIME()":{"notice":"The time at which the contract was deployed."},"FEES_BASE()":{"notice":"The fee base used for FEES_STAKING"},"FEES_STAKING()":{"notice":"Fees collected on each debasing, in FEES_BASE percent."},"HALVING_EVERY()":{"notice":"Time between each halving."},"INITIAL_SUPPLY()":{"notice":"Initial supply of the token."},"MINIMUM_TOTAL_SUPPLY()":{"notice":"Minimum total supply. When the total supply reaches this value, it can't go lower."},"NB_DEBASE_PER_HALVING()":{"notice":"Number of debasing per halving."},"SHARES_PRECISION_FACTOR()":{"notice":"returns the precision factor for shares."},"computeNewState()":{"notice":"Compute the total shares, supply and the fees to collect."},"computeSupply()":{"notice":"Compute the total supply and the fees to collect."},"feesCollector()":{"notice":"The address that collects the fees (the staking contract)"},"initialize(address,address)":{"notice":"Initialize the contract by setting the fees collector and staking the first amount of tokens."},"maxSharesReached()":{"notice":"returns if the max shares are reached."},"realBalanceOf(address)":{"notice":"Return the real-time balance of an account after an UpdateTotalSupply() call."},"setBlacklistForUpdateSupply(address,bool)":{"notice":"Blacklist an address for UpdateTotalSupply."},"setFeesCollector(address)":{"notice":"Changes the fees collector."},"setUniswapV2Pair(address)":{"notice":"Changes the Uniswap V2 pair address."},"sharesOf(address)":{"notice":"returns the share of the user."},"sharesToToken(uint256)":{"notice":"Convert shares to tokens."},"sharesToToken(uint256,uint256,uint256)":{"notice":"Convert shares to tokens given the new total shares and total supply."},"tokenToShares(uint256)":{"notice":"Convert tokens to shares."},"tokenToShares(uint256,uint256,uint256)":{"notice":"Convert tokens to shares given the new total shares and total supply."},"totalShares()":{"notice":"returns the total shares."},"transferShares(address,uint256)":{"notice":"Transfer tokens to a specified address by specifying the share amount."},"transferSharesFrom(address,address,uint256)":{"notice":"Transfer shares from a specified address to another specified address."},"uniswapV2Pair()":{"notice":"The Uniswap V2 pair to sync when debasing."},"updateTotalSupply()":{"notice":"update the total supply, compute the debase accordingly and transfer the fees to the feesCollector."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IBaseMillionCat.sol":"IBaseMillionCat"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70","urls":["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c","dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff","urls":["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d","dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"],"license":"MIT"},"src/interfaces/IBaseMillionCat.sol":{"keccak256":"0xd919039f7914326fa0e64aeed752edc61e210885e97b504971945cb4006074f5","urls":["bzz-raw://f60662d835756a0a5235c32265e3aeaa9581b46f522ebf5432e20b44e7d54bea","dweb:/ipfs/QmX44KRiDop1GL1jsBJqzu3FKQSSxhmiG9nmNJWsqtnd54"],"license":"BUSL-1.1"},"src/interfaces/IERC20Rebasable.sol":{"keccak256":"0x480ec2c2c5874dccc90fb36241f58bdbcb4eb32230a1d322233a9d04387f4016","urls":["bzz-raw://c8ac89047b4e287273b612671953adaaf6f26c1b89c4d127bc48cf73981c91b4","dweb:/ipfs/QmXBcbRWkrSAfbYcyEDFQbb53AGTdST2mvcxHo4N8jDbud"],"license":"BUSL-1.1"},"src/interfaces/UniswapV2/IUniswapV2Pair.sol":{"keccak256":"0xbeae878c7d7b88f85193db1377049cb3ceb4fca5a28579a127df1fac486851d0","urls":["bzz-raw://858b19bc7c9d3e930844eb98dd0b62c5f9c64d626160adabfe77399389a11219","dweb:/ipfs/QmSeZPzahwzb2ef8yRio62BQf8JoEhUnrWNTAFBoqQQFtb"],"license":"Unlicense"}},"version":1},"id":52}